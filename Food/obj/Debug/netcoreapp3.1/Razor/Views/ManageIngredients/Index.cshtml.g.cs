#pragma checksum "C:\Users\mateu\source\repos\Food\Food\Views\ManageIngredients\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b307d6cc5a35edf8050b37f5a490132af67406db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ManageIngredients_Index), @"mvc.1.0.view", @"/Views/ManageIngredients/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b307d6cc5a35edf8050b37f5a490132af67406db", @"/Views/ManageIngredients/Index.cshtml")]
    public class Views_ManageIngredients_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Food.Data.Models.Ingredient>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<div id=\"main\">\r\n\r\n    <div id=\"title\">Twoje składniki:</div>\r\n\r\n    <form>\r\n\r\n");
#nullable restore
#line 9 "C:\Users\mateu\source\repos\Food\Food\Views\ManageIngredients\Index.cshtml"
         foreach (var ingredient in Model)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <label>\r\n                <input class=\"ingredient-input\"");
            BeginWriteAttribute("value", " value=\"", 253, "\"", 275, 1);
#nullable restore
#line 12 "C:\Users\mateu\source\repos\Food\Food\Views\ManageIngredients\Index.cshtml"
WriteAttributeValue("", 261, ingredient.Id, 261, 14, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"radio\" required> ");
#nullable restore
#line 12 "C:\Users\mateu\source\repos\Food\Food\Views\ManageIngredients\Index.cshtml"
                                                                                         Write(ingredient.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </label>\r\n");
#nullable restore
#line 14 "C:\Users\mateu\source\repos\Food\Food\Views\ManageIngredients\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        <input id=""modal_window"" type=""button"" value=""Edytuj"">
        <button class=""delete-button"" type=""button"">Usuń</button>

    </form>

    <form>

        <div>

            <input type=""text"" class=""input-field"" placeholder=""Nazwa nowego składnika"" onfocus=""this.placeholder=''"" onblur=""this.placeholder='Nazwa nowego składnika'"" name=""new_category"" required>
            <button class=""add-button"" type=""button"">Dodaj</button>

        </div>

    </form>


</div>

<script>

    const addButton = document.querySelector('.add-button');
    const deleteButton = document.querySelector('.delete-button');
    const addIngredientName = document.querySelector('.input-field');

    bindEvents();

    function bindEvents() {
        addButton.onclick = addIngredient();
        deleteButton.onclick = deleteIngredient();
    }

    function addIngredient()
    {
        var ingredient = {
            //tu działa parser małe litery pierwsze na wielkie
            name: addIngre");
            WriteLiteral(@"dientName.value,
            userId: 1
        };

        fetch(""/ManageIngredients/AddIngredient"", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(ingredient)

        })

    }

    function deleteIngredient()
    {
        const selectedIngredient = Array.from(document.querySelectorAll('.ingredient-input')).find(ingredient => ingredient.checked);

        console.log(selectedIngredient);

        const ingredient = {
            id: parseInt(selectedIngredient.value),
            name: 'daa',
            userId: 1
        }

        fetch('/ManageIngredients/DeleteIngredient', {
            method: 'DELETE',
            header: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(ingredient)
        })
    }

    //addButton.onclick = () => {



    //    var ingredient = {
    //        //tu działa parser małe lite");
            WriteLiteral(@"ry pierwsze na wielkie
    //        name: addIngredientName.value,
    //        userId: 1
    //    };



    //    fetch(""/ManageIngredients/AddIngredient"", {
    //        method: 'POST',
    //        headers: {
    //            'Content-Type': 'application/json'
    //        },
    //        body: JSON.stringify(ingredient)

    //    })
    //}


</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Food.Data.Models.Ingredient>> Html { get; private set; }
    }
}
#pragma warning restore 1591
