#pragma checksum "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8f94de4d2150e067b3e0aec087b540774bcc524"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ManageMeals_Index), @"mvc.1.0.view", @"/Views/ManageMeals/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8f94de4d2150e067b3e0aec087b540774bcc524", @"/Views/ManageMeals/Index.cshtml")]
    public class Views_ManageMeals_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Food.ViewModel.SearchMealViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 4 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
   Layout = "~/Views/Shared/_Layout.cshtml"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div class=\"main\">\r\n\r\n    <div class=\"title\">Twoje posiłki:</div>\r\n\r\n    <form>\r\n\r\n");
#nullable restore
#line 13 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
         foreach (var meal in Model.Meals)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <label class=\"btn btn-outline-primary\">\r\n            <input class=\"meal-input\"");
            BeginWriteAttribute("value", " value=\"", 323, "\"", 339, 1);
#nullable restore
#line 16 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
WriteAttributeValue("", 331, meal.Id, 331, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"radio\" required> ");
#nullable restore
#line 16 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
                                                                         Write(meal.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </label>\r\n");
#nullable restore
#line 18 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                
        <div class=""meal-name-form"">
            <input class=""meal-name-input form-control"" type=""text"" placeholder=""Nowa nazwa posiłku"">
            <input class=""save-button btn btn-outline-primary m-2"" type=""button"" value=""Zapisz"">
        </div>

        <div>
            <input class=""edit-button btn btn-outline-warning m-2"" type=""button"" value=""Edytuj"">
            <input class=""delete-button btn btn-outline-danger m-2"" type=""button"" value=""Usuń"">
        </div>
        
        </form>

    <div class=""ingredients"">

        <div class=""title"">Stwórz nowy posiłek</div>

        <div><input class=""input-field form-control w-25 mx-auto"" type=""text"" placeholder=""Nazwa nowego posiłku"" required></div>
        
        <div>
");
#nullable restore
#line 39 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
              foreach (var ingredient in Model.Ingredients)
             {

#line default
#line hidden
#nullable disable
            WriteLiteral("             <label class=\"btn btn-outline-primary\">\r\n                   <input class=\"ingredients-checkboxes\"");
            BeginWriteAttribute("value", " value=\"", 1366, "\"", 1388, 1);
#nullable restore
#line 42 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
WriteAttributeValue("", 1374, ingredient.Id, 1374, 14, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"checkbox\" required /> ");
#nullable restore
#line 42 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
                                                                                                       Write(ingredient.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n             </label>\r\n");
#nullable restore
#line 44 "C:\Users\mateu\source\repos\Food\Food\Views\ManageMeals\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </div>
        <textarea class=""input-meal-recipe-field form-control w-50 mx-auto"" type=""text"" required></textarea>

        <button class=""add-button btn btn-outline-success"" type=""button"">Dodaj</button>

    </div>

</div>


<script>

    const ingredientsContainer = document.querySelector('.ingredients')
    const addButton = document.querySelector('.add-button')
    const addMealName = document.querySelector('.input-field')
    const addMealRecipe = document.querySelector('.input-meal-recipe-field')
    const editButton = document.querySelector('.edit-button')
    const deleteButton = document.querySelector('.delete-button')
    const editInput = document.querySelector('.meal-name-input')
    const editForm = document.querySelector('.meal-name-form')
    const saveButton = document.querySelector('.save-button')


    hideEditForm();
    bindEvents();


    function bindEvents() {
        addButton.onclick = addMeal
        editButton.onclick = displayOrHideEditForm
  ");
            WriteLiteral(@"      saveButton.onclick = updateMeal
        deleteButton.onclick = deleteMeal
    }

    function addMeal() {
        const ingredients = Array.from(ingredientsContainer.querySelectorAll('.ingredients-checkboxes'));
        const selectedIngredients = ingredients
            .filter(ingredient => ingredient.checked)
            .map(ingredient => parseInt(ingredient.value))
        const meal = {
            name: addMealName.value,
            //userId: parseInt(window.sessionStorage.getItem(""userId""))
            userId: 1,
            recipe: addMealRecipe.value
        }

        fetch(""/ManageMeals/Add"", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(meal)
        })

        setTimeout(function () {
            window.location.reload();
        }, 500); 

    }


    function updateMeal() {

        const selectedMeal = Array.from(document.querySelectorAll('.meal-in");
            WriteLiteral(@"put')).find(meal => meal.checked)

        const meal = {
            Id: parseInt(selectedMeal.value),
            Name: editInput.value,
            //userId: parseInt(window.sessionStorage.getItem(""userId"")),
            userId: 1
        }

        fetch(""/ManageMeals/Update"", {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(meal)
        })

        setTimeout(function () {
            window.location.reload();
        }, 500); 

    }


    function deleteMeal() {
        const selectedMeal = Array.from(document.querySelectorAll('.meal-input')).find(meal => meal.checked)


        const meal = {
            id: parseInt(selectedMeal.value),
            name: 'fds',
            userId: 1
        }


        fetch(""/ManageMeals/Delete"", {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
        ");
            WriteLiteral(@"    body: JSON.stringify(meal)
        })

        setTimeout(function () {
            window.location.reload();
        }, 500); 
    }


    function displayEditForm() {
        editForm.style.display = 'block'
    }


    function hideEditForm() {
        editForm.style.display = 'none'
    }

    function displayOrHideEditForm() {
        if (editForm.style.display = 'none') {
            editForm.style.display = 'block'
        }
        else if (editForm.style.display = 'block') {
            editForm.style.display = 'none'
        }
            
    }


</script>


    ");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Food.ViewModel.SearchMealViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
