@model Food.ViewModel.SearchMealViewModel

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }

<div class="main search-meal-container" data-ingredients='@Html.Raw(Json.Serialize(Model.Ingredients))'>

    <div class="title">Co masz w lodówce? Wybierz składniki z których chcesz skomponować posiłek.</div>

    <div class="ingredients">

        @foreach (var category in Model.Ingredients.GroupBy(ingredient => ingredient.CategoryId))
        {
            <div class="m-3">

                <button class="but but-ingredient-family">@Model.IngredientCategories.FirstOrDefault(ic => ic.Id == category.Key)?.Name</button>

                <div class="m-2">
                    @foreach (var ingredient in category.ToList())
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                </div>

            </div>
        }

        @if (!Model.Ingredients.Any(ingredient => ingredient.CategoryId == 9)) //warunek do zmiany
        {
            <div class="m-3">

                <button class="but but-ingredient-family">@Model.IngredientCategories.FirstOrDefault(ic => ic.Id == 9).Name</button>

                <div class="m-2">
                </div>

            </div>
        }


        @*<div class="m-3">

            <button class="button-show-ingredients-fruits but but-ingredient-family">Owoce</button>

            <div class="div-show-ingredients-fruits m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 2) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>

        </div>

        <div class="m-3">

            <button class="button-show-ingredients-vegetables but but-ingredient-family">Warzywa</button>

            <div class="div-show-ingredients-vegetables m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 3) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-meat but but-ingredient-family">Mięso</button>

            <div class="div-show-ingredients-meat m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 4) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-fish but but-ingredient-family">Ryby</button>

            <div class="div-show-ingredients-fish m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 6) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-pasta but but-ingredient-family">Kasze i makarony</button>

            <div class="div-show-ingredients-pasta m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 7) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-spices but but-ingredient-family">Przyprawy</button>

            <div class="div-show-ingredients-spices m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 8) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-dairy but but-ingredient-family">Nabiał</button>

            <div class="div-show-ingredients-dairy m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 9) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-bread but but-ingredient-family">Pieczywo</button>

            <div class="div-show-ingredients-bread m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 10) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>
        </div>

        <div class="m-3">

            <button class="button-show-ingredients-other but but-ingredient-family">Użytkownika</button>

            <div class="div-show-ingredients-other m-2">
                @foreach (var ingredient in Model)
                {
                    @if (ingredient.CategoryId == 11) //// warunek do zmiany
                    {
                        <label class="btn btn-outline-primary">
                            @ingredient.Name <input value="@ingredient.Id" type="checkbox">
                        </label>
                    }
                }
            </div>

        </div>*@

        <div>
            <button class="search-button btn btn-outline-success m-2" type="button">Komponuj posiłki :)</button>
        </div>

    </div>

    <div class="meal-result-container">

    </div>

</div>


<script>
    //const showButtonIngredientsFruits = document.querySelector('.button-show-ingredients-fruits');
    //const divShowIngredientsFruits = document.querySelector('.div-show-ingredients-fruits')

    //const showButtonIngredientsVegetables = document.querySelector('.button-show-ingredients-vegetables');
    //const divShowIngredientsVegetables = document.querySelector('.div-show-ingredients-vegetables')

    //const showButtonIngredientsMeat = document.querySelector('.button-show-ingredients-meat');
    //const divShowIngredientsMeat = document.querySelector('.div-show-ingredients-meat')

    //const showButtonIngredientsFish = document.querySelector('.button-show-ingredients-fish');
    //const divShowIngredientsFish = document.querySelector('.div-show-ingredients-fish')

    //const showButtonIngredientsPasta = document.querySelector('.button-show-ingredients-pasta');
    //const divShowIngredientsPasta = document.querySelector('.div-show-ingredients-pasta')

    //const showButtonIngredientsSpices = document.querySelector('.button-show-ingredients-spices');
    //const divShowIngredientsSpices = document.querySelector('.div-show-ingredients-spices')

    //const showButtonIngredientsDairy = document.querySelector('.button-show-ingredients-dairy');
    //const divShowIngredientsDairy = document.querySelector('.div-show-ingredients-dairy')

    //const showButtonIngredientsBread = document.querySelector('.button-show-ingredients-bread');
    //const divShowIngredientsBread = document.querySelector('.div-show-ingredients-bread')

    //const showButtonIngredientsOther = document.querySelector('.button-show-ingredients-other');
    //const divShowIngredientsOther = document.querySelector('.div-show-ingredients-other')

    const allIngredientsCategoriesButtons = document.querySelectorAll('.but-ingredient-family');
    const divShowIngredientsOther = Array.from(allIngredientsCategoriesButtons).find(button => button.textContent == 'Uzytkownika').nextSibling.nextSibling

    const searchButton = document.querySelector('.search-button');
    const ingredientsContainer = document.querySelector('.ingredients');

    const mealResultContainer = document.querySelector('.meal-result-container');

    const ingredientsData = JSON.parse(document.querySelector('.search-meal-container').dataset.ingredients)

    bindEvents()

    function bindEvents() {

        
        displayMessegeIfDivIsEmpty(divShowIngredientsOther, "Brak własnych składników");

        searchMealsAfterClick();

        //divShowIngredientsFruits.style.display = 'none'
        //divShowIngredientsVegetables.style.display = 'none'
        //divShowIngredientsMeat.style.display = 'none'
        //divShowIngredientsFish.style.display = 'none'
        //divShowIngredientsPasta.style.display = 'none'
        //divShowIngredientsSpices.style.display = 'none'
        //divShowIngredientsDairy.style.display = 'none'
        //divShowIngredientsBread.style.display = 'none'
        //divShowIngredientsOther.style.display = 'none'


        for (const button of allIngredientsCategoriesButtons) {
            button.nextSibling.nextSibling.style.display = 'none'
            displayIngredientsGroupAfterClick(button, button.nextSibling.nextSibling)
        }

        //displayIngredientsGroupAfterClick(showButtonIngredientsFruits, divShowIngredientsFruits)
        //displayIngredientsGroupAfterClick(showButtonIngredientsVegetables, divShowIngredientsVegetables)
        //displayIngredientsGroupAfterClick(showButtonIngredientsMeat, divShowIngredientsMeat)
        //displayIngredientsGroupAfterClick(showButtonIngredientsFish, divShowIngredientsFish)
        //displayIngredientsGroupAfterClick(showButtonIngredientsPasta, divShowIngredientsPasta)
        //displayIngredientsGroupAfterClick(showButtonIngredientsSpices, divShowIngredientsSpices)
        //displayIngredientsGroupAfterClick(showButtonIngredientsDairy, divShowIngredientsDairy)
        //displayIngredientsGroupAfterClick(showButtonIngredientsBread, divShowIngredientsBread)
        //displayIngredientsGroupAfterClick(showButtonIngredientsOther, divShowIngredientsOther)

    }

    function displayMessegeIfDivIsEmpty(checkedDiv, message) {
        if (!$(checkedDiv).children().length > 0) {
            checkedDiv.innerHTML = message;
        }
    }

    function searchMealsAfterClick() {
        searchButton.onclick = () => {
            const ingredients = Array.from(ingredientsContainer.querySelectorAll('input'));
            const selectedIngredients = ingredients
                .filter(ingredient => ingredient.checked)
                .map(ingredient => parseInt(ingredient.value))

            var str = "Wyszukane posiłki: ";

            mealResultContainer.innerHTML = str.bold();

            mealResultContainer.style.visibility = 'block';
            mealResultContainer.className = "border-dark border-top m-4 pt-4";

            getMealsByIngredients(selectedIngredients)
        }
    }

    function displayIngredientsGroupAfterClick(button, divOfIngredients) {

        button.onclick = () => {
            if (divOfIngredients.style.display == 'none') {
                divOfIngredients.style.display = 'block';
            }
            else if (divOfIngredients.style.display == 'block') {
                divOfIngredients.style.display = 'none'
            }
        }
    }


    function displayMealResult(meals) {
        for (const meal of meals) {
            
            const mealElementNameDiv = document.createElement('div');
            const mealElementNameButton = document.createElement('button');
            mealElementNameButton.className = "btn btn-outline-info m-2";
            const mealElementIngredients = document.createElement('div');
            const mealElementRecipe = document.createElement('div');
            
            mealElementNameButton.innerHTML = `${meal.name}.`;
            mealElementNameDiv.appendChild(mealElementNameButton);
            mealElementIngredients.innerHTML = `Skladniki: ${getMealIngredients(meal)}.`;
            mealElementRecipe.innerHTML = `Przepis: ${meal.recipe}`;

            mealResultContainer.appendChild(mealElementNameDiv);
            mealResultContainer.appendChild(mealElementIngredients);
            mealResultContainer.appendChild(mealElementRecipe);

            mealElementIngredients.style.display = 'none';
            mealElementRecipe.style.display = 'none';

            mealElementNameButton.onclick = () => {
                
                if (mealElementIngredients.style.display == 'none') {
                    mealElementIngredients.style.display = 'block';
                    mealElementRecipe.style.display = 'block';
                }
                else if (mealElementIngredients.style.display == 'block') {
                    mealElementIngredients.style.display = 'none'
                    mealElementRecipe.style.display = 'none'
                }
            }
        }
    }


    function getMealsByIngredients(selectedIngredients) {
        const requestData = {
            ingredientIds: selectedIngredients
        }

        fetch("/SearchMeal/Search", {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData)
        })
            .then(response => response.json())
            .then(displayMealResult);
    }


    function getMealIngredients(meal) {
        const ingredients = meal.mealIngredients.map(mi => getIngredientNameById(mi.ingredientId))
        return ingredients.toString()
    }


    function getIngredientNameById(id) {
        return ingredientsData.find(ingredient => ingredient.id === id).name
    }

</script>